import os
import pava
import sys


print '1. Number of loaded modules at start:',
print len(sys.modules)

# Tell pava where it can find Java user-defined classes
print '2. Loading Java...'
pava.set_classpath([os.path.dirname(__file__)])

print '3. Import the Python module that contains the transpiled HelloWorld...'
import classfiles

print '4. Call HelloWorld.main:'
classfiles.HelloWorld.main()

print '5. Number of loaded modules after loading HelloWorld:',
print len(sys.modules)

print '6. Done.'

#
# HelloWorld.class gets compiled to Python bytecodes as follows:
#
# Python Bytecodes generated by Pava        Original Java bytecodes in HelloWorld.class
# ----------------------------------------------------------------------------------------------------------------------
#  0 LOAD_GLOBAL    0 java            ### 0 getstatic ('java/lang/System', 'Ljava/io/PrintStream;', 'out')
#  3 LOAD_ATTR      1 lang
#  6 LOAD_ATTR      2 System
#  9 LOAD_ATTR      3 out
# 12 LOAD_ATTR      4 println
# 15 LOAD_CONST     1 u'Hello World!' ### 3 ldc (u'Hello World!',)
# 18 CALL_FUNCTION  1                 ### 5 invokevirtual ('java/io/PrintStream', 'println', '(Ljava/lang/String;)V', 1)
# 21 POP_TOP
# 22 LOAD_CONST    2 0                ### 8 return ()
# 25 RETURN_VALUE
# ---------------------------------------------------------------------------------------------------------------------
#
